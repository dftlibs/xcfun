language: cpp
sudo: false
dist: bionic 

matrix:
  include:
    # Linux recent Clang Builds
    - os: linux
      compiler: clang
      python: 3.6
      addons:
        apt:
          packages:
            - clang
            - gfortran
      env:
        - CXX_COMPILER='clang++'
        - C_COMPILER='clang'
        - Fortran_COMPILER='gfortran'
        - BUILD_TYPE='Release'
        - COVERAGE=OFF
        - PYBIND11='-Dpybind11_DIR=$HOME/Deps/pybind11/share/cmake/pybind11'
    - os: linux
      compiler: clang
      python: 3.6
      addons: 
        apt:
          packages:
            - clang
            - gfortran
      env:
        - CXX_COMPILER='clang++'
        - C_COMPILER='clang'
        - Fortran_COMPILER='gfortran'
        - BUILD_TYPE='Release'
        - COVERAGE=OFF
    # Linux recent GCC Builds
    - os: linux
      compiler: gcc
      python: 3.6
      addons:
        apt:
          packages:
            - g++
            - gcc
            - gfortran
      env:
        - CXX_COMPILER='g++'
        - C_COMPILER='gcc'
        - Fortran_COMPILER='gfortran'
        - BUILD_TYPE='Release'
        - COVERAGE=OFF
        - PYBIND11='-Dpybind11_DIR=$HOME/Deps/pybind11/share/cmake/pybind11'
    # OSX Clang Builds
    - os: osx
      osx_image: xcode11.2  # Python 3.7.4 running on macOS 10.14.4
      compiler: clang
      language: shell       # 'language: python' is an error on Travis CI macOS
      addons:
        homebrew:
          packages:
            - cmake
            - pipenv
          update: true
      env:
        - CXX_COMPILER='clang++'
        - C_COMPILER='clang'
        - Fortran_COMPILER='gfortran'
        - BUILD_TYPE='Release'
        - COVERAGE=OFF
        - PYBIND11='-Dpybind11_DIR=$HOME/Deps/pybind11/share/cmake/pybind11'
    # Linux GCC Coverage build
    - os: linux
      python: 3.6
      compiler: gcc
      addons:
        apt:
          packages:
            - g++
            - gcc
            - gfortran
            - lcov
      env:
        - CXX_COMPILER='g++'
        - C_COMPILER='gcc'
        - Fortran_COMPILER='gfortran'
        - BUILD_TYPE='Debug'
        - COVERAGE=ON

before_install:
  - test -n $CC && unset CC
  - test -n $CXX && unset CXX
  - test -n $FC && unset FC
  - mkdir -p "$HOME"/Deps "$HOME"/Downloads

install:
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      pip install --user pipenv --upgrade
    fi
  - pipenv --three install --dev
  - source $(pipenv --venv)/bin/activate
  - ./.ci/cmake.sh
  - ./.ci/pybind11.sh

before_script:
  - python --version
  - cd ${TRAVIS_BUILD_DIR}
  - >
     cmake -Bbuild -H.
     -DCMAKE_CXX_COMPILER=${CXX_COMPILER}
     -DCMAKE_C_COMPILER=${C_COMPILER}
     -DCMAKE_Fortran_COMPILER=${Fortran_COMPILER}
     -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
     -DENABLE_CODE_COVERAGE=${COVERAGE}
     -DXCFun_ENABLE_PYTHON_INTERFACE=ON
     -DPYTHON_EXECUTABLE=$(which python)
     -DCMAKE_INSTALL_PREFIX=$HOME/Software/xcfun
     ${PYBIND11}

script:
  # Build and install
  - cmake --build build --target install -- --jobs=2 VERBOSE=1
  - cd build
  # Test
  - ctest --output-on-failure --verbose --parallel 2
  # Check that Python bindings are usable from install prefix
  - env PYTHONPATH=$HOME/Software/xcfun/lib/python:$PYTHONPATH python -c 'import xcfun; print(xcfun.xcfun_splash())'
  - cd -
  # Build C++ example
  - bash .ci/example.sh CXX_host
  # Build Fortran example
  - bash .ci/example.sh Fortran_host

after_success:
  - |
    if [[ "$COVERAGE" = "ON" ]]; then
      cd $TRAVIS_BUILD_DIR
      lcov --version
      lcov --directory . --capture --output-file coverage.info
      lcov --remove coverage.info '/usr/*' --output-file coverage.info
      lcov --remove coverage.info 'external/*' --output-file coverage.info
      lcov --remove coverage.info 'test/*' --output-file coverage.info
      lcov --list coverage.info
      bash <(curl -s https://codecov.io/bash) -X gcov || echo "Codecov did not collect coverage reports"
    fi
