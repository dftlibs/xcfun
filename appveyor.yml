##
# The XCFun CI configuration for Windows OS at AppVeyor
#
# Current software used:
# OS: 64-bit Windows Server 2012 R2
# Compilers: 64-bit MinGw-w64 5.1.0 (downloaded during script execution)
#
# Notes:
# Where "ps:" is used commands are executed in PowerShell
##

# build version format: 1.0.1, 1.0.2, ...
version: 1.0.{build}

# prepare environment
environment:
# set custom path (will be more extended later in build_script section)
  path: C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\Program Files\7-Zip;C:\Program Files (x86)\CMake\bin
# set MinGw-w64 (64-bit) version 5.1.0 download URL
  url: http://kent.dl.sourceforge.net/project/mingw-w64/Toolchains%20targetting%20Win64/Personal%20Builds/mingw-builds/5.1.0/threads-posix/seh/x86_64-5.1.0-release-posix-seh-rt_v4-rev0.7z
# user can possibly use different Python versions, we try to test multiple cases
# 64-bit version on 64-bit system allows easier installation of Python packages using .exe installers
# and better CMake automatic detection of some Python tools

build_script:
# create dir for custom software and move there
- mkdir C:\software && cd C:\software

# download and unpack MinGw-w64 compilers
- ps: wget $env:url -OutFile MinGW.7z
- 7z x MinGW.7z > NUL

# add compilers binary dir to path
- set path=%path%;C:\software\mingw64\bin

# download and upgrade pip
#- ps: wget https://bootstrap.pypa.io/get-pip.py -OutFile get-pip.py
#- python get-pip.py

# go back to project source dir
- cd %APPVEYOR_BUILD_FOLDER%

test_script:
# show environment
- echo %path%
# run tests
- mkdir build
- cd build
- cmake -G "MinGW Makefiles" ..
- mingw32-make 
- ctest
